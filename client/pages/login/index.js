import Head from 'next/head'
import React, { useRef, useState } from 'react'
import 'bootstrap/dist/css/bootstrap.min.css';
import { Form, Button, Card, Alert, Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'
import Link from 'next/link'
import { withPublic } from '../../src/app/routes'; 


function Login ( {auth} ) {

	const emailRef = useRef()
	const passwordlRef = useRef()
	const { logIn, loginWithGoogle } = auth
	const [ error, setError ] = useState('')
	const [ loading, setLoading ] = useState(false)
	
	const handleSubmit = async (e) => {
		e.preventDefault()
		
		try {
			setError('')
			setLoading(true)
			const { result, error } = await logIn(emailRef.current.value, passwordlRef.current.value)
			console.log("Success. The user is logged in")
			
		} catch (error) {	
			console.log(error.message)
			setError('failed to log in') 
		}
		//setLoading(false)
			
	}
	const handleClick = async (e) => {
		e.preventDefault()
		try {
			setError('')
			setLoading(true)
			const { result, error } = await loginWithGoogle()
			const credential = auth.GoogleAuthProvider.credentialFromResult(result);
			console.log(result)
			console.log(credential.accessToken)
			console.log(result.user.uid)
			console.log(result.user.displayName)
			const uid = result.user.uid

			console.log("Success. The user is logged in with Google")
		} catch (error) {
			console.log(error.message)
			setError('fail to log in')
		}
	}
	



	
  return (
	<>
		<Head>
			<title>Create Next App</title>
			<meta name="description" content="Generated by create next app" />
			<meta name="viewport" content="width=device-width, initial-scale=1" />
			<link rel="icon" href="/favicon.ico" />
      	</Head>
      	<nav>
        <Navbar bg="dark" variant="dark">
            <Container fluid>
              <Navbar.Brand href="/">Dog Transportation</Navbar.Brand>
              <Navbar.Toggle aria-controls="navbar-dark-example" />
              <Navbar.Collapse id="navbar-dark-example">
              </Navbar.Collapse>
          </Container>
        </Navbar>
      </nav>
	

	<Container className = "d-flex align-items-center justify-content-center"
	style = {{ minHeight: "100vh" }}>
	
	<div className = "w-100" style = {{ maxWidth: '400px'}}>
		
      	<Button variant="primary" size="lg" onClick = { handleClick }><p>Log in with Google</p></Button>
		
		<Card>
			<Card.Body>
				<h2 className = "text-center mb-4">Log In</h2> 
				{ error && <Alert variant = "danger"> { error } </Alert> }
				<Form onSubmit={handleSubmit}>
					<Form.Group id = "email">
						<Form.Label> Email </Form.Label>
						<Form.Control type = "email" ref = {emailRef} required />
					</Form.Group>
					<br />
					<Form.Group id = "password">
						<Form.Label> Password </Form.Label>
						<Form.Control type = "password" ref = {passwordlRef} required />
						<Form.Text className="text-muted">
						<Link href="../login/index">Forgot your password?</Link>
						</Form.Text>
					</Form.Group>		
					<br/ >
					<Button disabled = { loading }  className = "w-100" type = "submit">Log In</Button>
				</Form>
				<div className = "w-100 text-center mt-2">
					Don't have an account? <Link href="../register">Sign Up</Link> 
				</div>
			</Card.Body>
		</Card>
	</div>
	</Container>
	</>
  );
}

export default withPublic(Login)