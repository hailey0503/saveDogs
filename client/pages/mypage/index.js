import Head from 'next/head'
import React,  { useState, useEffect } from 'react';
import { Col, Row, Card, Alert, Navbar, Nav, Container, Offcanvas, Image } from 'react-bootstrap';
import Link from 'next/link'
//import { useRouter } from 'next/navigation'
import 'bootstrap/dist/css/bootstrap.min.css';
import { withProtected } from '../../src/app/routes';
import Stack from 'react-bootstrap/Stack';



function myPage( {auth} ) {

  const [ error, setError ] = useState('');
  const { currentUser, logOut } = auth;
  const [ userInfo, setUserInfo ] = useState('');
  const [ dogs, setDogs ] = useState("")
 
  useEffect(() => {
    const loadUserInfo = async () => {
      const token = await currentUser.getIdToken();
      console.log(token)

    }
    if (currentUser) {
      loadUserInfo();
      loadMyDogs();
    }
  }, [currentUser]);

  console.log("mypage")
  console.log(currentUser)
  async function handleLogOut() {
  
    try {

      setError("")
      await logOut();
    } catch {

      setError("Failed to Log Out")

    }
  }
  const loadMyDogs = async () => {
		const token = await currentUser.getIdToken();
		console.log(token)
		const cur_uid = currentUser.uid


		const res = await fetch('http://localhost:4800/users', {
  				headers: {authorization: `Bearer ${token}`}
		})
		const response = await res.json()
		console.log(response.result)
		const dogs = response.result.filter(item => item.uid === cur_uid )
		console.log(dogs)
		setDogs(dogs)
	  
	}
  
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {[false].map((expand) => (
        <Navbar key={expand} bg="dark" variant="dark" expand={expand} className="mb-3">
          <Container fluid>
          <Navbar.Brand href="/">Dog Transportation</Navbar.Brand>
            <Navbar.Toggle aria-controls={`offcanvasNavbar-expand-${expand}`} />
            <Navbar.Offcanvas
              id={`offcanvasNavbar-expand-${expand}`}
              aria-labelledby={`offcanvasNavbarLabel-expand-${expand}`}
              placement="end"
            >
              <Offcanvas.Header closeButton>
                <Offcanvas.Title id={`offcanvasNavbarLabel-expand-${expand}`}>
                { currentUser && <div>{currentUser.displayName? currentUser.displayName: currentUser.email}</div> }
                </Offcanvas.Title>
              </Offcanvas.Header>
              <Offcanvas.Body>
                <Nav className="justify-content-end flex-grow-1 pe-3">
                  <Nav.Link href="/mypage">View my page</Nav.Link>
                  <Nav.Link href="/mydogs">Manage my dogs</Nav.Link>
                  <Nav.Link href="../message">My Message</Nav.Link>
                  <Nav.Item> 
                    <Nav.Link onClick = { handleLogOut }>Log Out</Nav.Link>
                  </Nav.Item>
                </Nav>
              </Offcanvas.Body>
            </Navbar.Offcanvas>
          </Container>
        </Navbar>
      ))}
      <Container style = {{ minHeight: "20vh" }}>
     
      <Stack direction="horizontal" gap={2}>
    
          <div>
          <Image
                style={{ height: '10rem'  }}
                className="d-block w-100"
                src="http://localhost:3000/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fdog_9.77c974bd.jpeg&w=640&q=75"
                roundedCircle 
              />
          
          </div>
        <div>
          <h2> { currentUser && <div>{currentUser.displayName? currentUser.displayName: currentUser.email}'s page</div> } </h2>
          <Link href = '/profile' className = 'profile-update'>update profile</Link>
        </div>
       
       </Stack>
      </Container>
      
      <Container style = {{ minHeight: "100vh" }}>
      <div className = "w-300" style = {{ maxWidth: '400px'}}>
  
        <Stack gap={4}>
          <div className="favorites"> 
          
            
          <h2> { currentUser && <div>{currentUser.displayName? currentUser.displayName: currentUser.email}'s favorites</div> } </h2>
          <Container className = "d-flex align-items-center justify-content-center" style = {{ minHeight: "100vh" }}>
          {dogs.result && dogs.result.map(dog => 
                  <div key={dog._id}>
                    <Col>
                      <Card style={{ width: '30rem', height: '30rem' }}>
                    
                        <Card.Img variant="top" style={{ width: '30rem', height: '20rem'  }} src={" http://localhost:4800/" + dog.image } />
                        <Card.Body>
                          <Card.Title>
                            { dog.name }
                          </Card.Title>
                          <Card.Text> 
                            { dog.name } wants to go to { dog.airport }
                          </Card.Text>
                          <Link href= "../detail" className="btn btn-primary w-500 mt-3">
                              click for detail
                          </Link>
                        </Card.Body>
                      </Card>
                    </Col>
                  </div>
                )}
                </Container>
              
              </div> 
              <div>
                <Link href= "../mydogs" className="btn btn-primary w-500 mt-3">
                  massage box
                </Link>
              </div>
              <div>
                <Link href= "../admin" className="btn btn-primary w-500 mt-3">
                  upload dogs  
                </Link>
              </div>
              <div>
                <Link href= "../mydogs" className="btn btn-primary w-500 mt-3">
                  manage my dogs  
                </Link>
              </div>
            </Stack>
            
          </div>
          </Container>  
    </>
   
  )
}

export default withProtected(myPage)
