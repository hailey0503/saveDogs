import Head from 'next/head'
import React from "react";
import styles from '../../styles/Home.module.css'
import 'bootstrap/dist/css/bootstrap.min.css';
import { Form, Button, Nav, Navbar, Col, Row, Offcanvas, Container, Image } from "react-bootstrap";
import { withProtected } from '../../src/app/routes';
import { useState } from 'react';
import { useRouter } from 'next/navigation' 
import { updateProfile } from "firebase/auth";
import NavComp from "../../comps/NavComp.js";


function Profile({auth}) {

	// register a dog to db in form submit 
  // call POST /dogs/register via fetch in handleSubmit
  
  const handleSubmit = async (event) => {
    // Stop the form from submitting and refreshing the page.
    event.preventDefault()

    // Get data from the form.
    const data = new FormData()
    data.append('name', event.target.name.value)
    data.append('contact', event.target.contact.value)
    data.append('email', event.target.email.value)
    data.append('message', event.target.message.value)
    data.append('testImage', event.target.image.files[0])

    console.log(data.testImage)
    console.log(event.target.image)

    // Send the data to the server in JSON format.
    //const JSONdata = JSON.stringify(data)

    // API endpoint where we send form data.
    //const endpoint = process.env.API_ENDPOINT
    const endpoint = process.env.API_ENDPOINT  
    // Form the request for sending data to the server.
    const options = {
      // The method is POST because we are sending data.
      method: 'POST',
      // Tell the server we're sending JSON.
      /*
      headers: {
        'Content-Type': 'multipart/form-data',
      },
       */
      // Body of the request is the JSON data we created above.
      body: data,
       
    }

    // Send the form data to our forms API on Vercel and get a response.
    const response = await fetch(endpoint, options)

    // Get the response data from server as JSON.
    // If server returns the name submitted, that means the form works.
    const result = await response.json()
    //alert(`Is this your full name: ${result.data}`)
    alert(`successfully uploaded`)

  }

  const [ error, setError ] = useState('')
  const { currentUser, logOut } = auth;
  const router = useRouter()

  async function handleLogOut() {
  
    try {

      setError("")
      await logOut();
    } catch {

      setError("Failed to Log Out")

    }
  }

  async function update(event) {
    updateProfile(auth.currentUser, {
    displayName: event.target.name.value, 
    photoURL: event.target.image.value//it's uploaded as fakepath 
    }).then(() => {
      alert('User Profile Updated Successfully');
      console.log(currentUser)
    }).catch((error) => {
      console.log(error.message)
      setError(error.message)
    });
    alert('User Profile Updated Successfully');
    router.push(`../mypage/${currentUser.uid}`)
  }
  return (
    <>
       <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NavComp />
      <main className={styles.main}>
      <h2> { currentUser && <div className='username'> Hello, {currentUser.displayName? currentUser.displayName: currentUser.email}! </div> } </h2>
      <Container className = "d-flex align-items-center justify-content-center" style = {{ minHeight: "30vh" }}>
      <Row>
       
        <Col xs={6} md={4}>
          <Image src= "http://localhost:3000/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Fdog_9.77c974bd.jpeg&w=640&q=75" roundedCircle />
        </Col>
        
      </Row>
    </Container>
      <div className="username" >
        <Form onSubmit={update}>
          <Row>
            <Col>
              <Form.Label>Username</Form.Label>
              <Form.Control type="text" id = "name" placeholder="name" />
          </Col>
          <Col>
              <Form.Group controlId="formFileMultiple" className="mb-3">
              <Form.Label>Your photo</Form.Label>
              <Form.Control type="file" id = 'image' multiple />
              </Form.Group>
          </Col>
        </Row>	
          <Form.Label>About me</Form.Label>
          <Form.Control as="textarea" id = "message" rows={3} />
          <br/>
          <Button variant="primary" type="submit">
            update 
          </Button>
        
        </Form>
      </div>
    </main>
  </>
  );
}

export default withProtected(Profile);
